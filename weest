#!/bin/bash

echo "$@"

apk-ins()
{
	for f in "$@"
	do
		echo Installing $f ...
		adb install $f
	done
}

myhint()
{
	echo sed -i 's/\/lib\/\(ld-linux.so.3\)/\/etc\/\1/' "$@"
}

mksi()
{
	cur=`echo $PWD|sed s#^/##` && find . -name *.o.cmd|xargs cat|sed '/gcc/d'|sed "s#${cur}/##"|sed 's/.*:=\(.*\)/\1\\/;s/$(wildcard//;s/)//;s/[ \t]*//g;s/^\///'|sort -u|sed -n '/.[chS]\\/p'|sed 's/\\//' |tee si.lst
}

myfmt()
{
	which dos2unix && dos2unix "$@"
	which indent && indent -npro -kr -i8 -ts8 -sob -l80 -ss -ncs -cp1 "$@"
	#sed -i 's/ \{4\}/\t/g;s/ *$//g;s/\r//g' "$@"
}

mytar()
{
	if test -z $1 -o "$1" == "."; then
		cd $(readlink -e $(pwd)) && (
			basename `pwd`|xargs -ti tar -C .. -zcvf /home/diskbak/{}-`date +%Y%m%d`.tgz {}
			cd - 1>/dev/null
		)
	else
		dd=`basename $1`
		echo ${dd/.git/}
		tar -zcvf /home/diskbak/${dd/.git/-git}-`date +%Y%m%d`.tgz $1
	fi
}

myins()
{
	to="$1"
	shift;
	for f in "$@"
	do
		{ adb -e push "$f" $to; }
	done
}

myrepo()
{
	cmd=$1
	case $cmd in
	init)
	repo=$(dirname $0)/repo
	[ -e $repo ] && {
		[ $(($(date +%s)-$(stat $repo -c %Y 2>/dev/null))) -gt 2592000 ] && {
			curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > $repo && chmod a+x $repo
		}
	}
	branch=$2
	mkdir $branch || return
	cd $branch && {
		repo init \
			--manifest-url=git://svr-mirror/git/mirror/android/platform/manifest.git \
			--manifest-branch=$branch \
			--repo-url=git://svr-mirror/git/mirror/android/tools/repo.git
		##sed -i 's/\(git:\/\/\)android.git.kernel.org\//\1svr-mirror\/git\/mirror\/android\//' .repo/manifest.xml
	}
	echo "pls cd $branch && repo sync [<project name>...]"
	;;

	sync)
	#for proj in `find . -type d |grep "[^/]\.git$"`
	for proj in `find . -type d -name "*.git" ! -name ".git"`
	do
		cd $proj && {
			echo `pwd`
			git fetch `git remote -v|head -n 1|cut -f1`
			cd - 1>/dev/null
		} ##&
	done
	wait
	;;

	add)
	proj=${2/.git/}
	mkdir -p `dirname $proj`
	mkdir $proj.git || return
	cd $proj.git && {
		git init --bare
		cat >>config << EOF
[remote "aosp"]
url = https://android.googlesource.com/$proj.git
review = review.source.android.com
projectname = $proj
fetch = +refs/heads/*:refs/heads/*
EOF
		git fetch aosp
	}
	;;

	list)
	echo `pwd`
	for proj in `cat .repo/project.list`
	do
		cd $proj && {
			echo `pwd`
			git log aosp/goldfish -1 |grep Author
			cd - 1>/dev/null
		}
	done
	;;

	*)
	echo unknown $cmd
	;;
	esac

}

buildin()
{
	for wee in `cat $0|sed -ne 's/()$//p'|egrep -v 'main|buildin'`
	do
		prog=$(basename $(readlink -f $0))
		ln -vs $prog $wee 2>/dev/null && {
			echo -n;##grep $wee .gitignore 1>/dev/null || echo $wee>>.gitignore
		}
	done
}

main()
{
	prog=`basename $0`
	[ $prog == "weest" ] && {
		[ -z $1 ] && {
			cd `dirname $0` && { buildin "$@"; cd - 1>/dev/null; }
		} || {
			echo tbd ...
		}
		return
	}

	eval $prog "$@"
}

main "$@"
